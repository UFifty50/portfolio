import { ResourceInstance } from "./Resource";
import type { MultiplePlayersArgument, RecipeJSON } from "../arguments/index";
import type { BASIC_CONFLICT_STRATEGIES } from "../generalTypes";
import type { Datapack } from "../datapack/index";
export declare type RecipeOptions = {
    /**
     * What to do if another Recipe has the same name.
     *
     * - `throw`: Throw an error.
     * - `replace`: Replace silently the old Recipe with the new one.
     * - `ignore`: Keep silently the old Recipe, discarding the new one.
     */
    onConflict?: BASIC_CONFLICT_STRATEGIES;
};
export declare class RecipeInstance<P1 extends string = string, P2 extends string = string, P3 extends string = string> extends ResourceInstance {
    recipeJSON: RecipeJSON<P1, P2, P3>;
    constructor(datapack: Datapack, name: string, recipe: RecipeJSON<P1, P2, P3>, options?: RecipeOptions);
    /** Give this recipe to the given players. */
    give: (targets: MultiplePlayersArgument) => void;
    /** Take this recipe from the given players. */
    take: (targets: MultiplePlayersArgument) => void;
}
