import { ResourceInstance } from "./Resource";
import type { PredicateJSON } from "../arguments/index";
import type { BASIC_CONFLICT_STRATEGIES } from "../generalTypes";
import type { Datapack } from "../datapack/index";
import type { ConditionClass } from "../variables/index";
export declare type PredicateOptions = {
    /**
     * What to do if another Predicate has the same name.
     *
     * - `throw`: Throw an error.
     * - `replace`: Replace silently the old Predicate with the new one.
     * - `ignore`: Keep silently the old Predicate, discarding the new one.
     */
    onConflict?: BASIC_CONFLICT_STRATEGIES;
};
export declare class PredicateInstance extends ResourceInstance implements ConditionClass {
    predicateJSON: PredicateJSON;
    constructor(datapack: Datapack, name: string, predicate: PredicateJSON, options?: PredicateOptions);
    /**
     * @internal
     */
    _toMinecraftCondition(): {
        value: any[];
    };
}
