import { ResourceInstance } from "./Resource";
import type { HintedTagStringType, TAG_TYPES, TagJSON, TagSingleValue } from "../arguments/index";
import type { BASIC_CONFLICT_STRATEGIES } from "../generalTypes";
import type { Datapack } from "../datapack/index";
export declare type TagOptions = {
    /**
     * What to do if another Tag has the same name.
     *
     * - `throw`: Throw an error.
     * - `replace`: Replace silently the old Tag with the new one.
     * - `ignore`: Keep silently the old Tag, discarding the new one.
     */
    onConflict?: BASIC_CONFLICT_STRATEGIES;
};
export declare class TagInstance<TYPE extends TAG_TYPES> extends ResourceInstance {
    readonly type: TYPE;
    readonly values: TagSingleValue<string>[];
    constructor(datapack: Datapack, type: TYPE, name: string, values?: TagJSON<TYPE>, replace?: boolean, options?: TagOptions);
    get name(): string;
    /** Adds a new value to this tag. */
    add(value: TagSingleValue<HintedTagStringType<TYPE>>): void;
    toString(): string;
}
