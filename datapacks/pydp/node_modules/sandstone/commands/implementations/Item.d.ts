import { Command } from "../Command";
import type { CONTAINER_SLOTS, Coordinates, ENTITY_SLOTS, ITEMS, MultipleEntitiesArgument } from "../../arguments/index";
export declare class ItemSource extends Command {
    /**
     * Replace the slot with a specific item.
     * @param item The item to replace the slot with.
     * @param count The amount of items.
     */
    with: (item: ITEMS, count: number) => void;
    /**
     * Replace the slot with a specific item.
     * @param item The item to replace the slot with.
     * @param count The amount of items.
     */
    private fromBlock;
    private fromEntity;
    /**
     * Replace the slot with a block or an entity's item
     */
    from: {
        /**
         * @param pos The coordinates of the container to copy items from.
         * @param slot The slot to copy the items from.
         * @param [modifier] An optional modifier to apply.
         */
        block: (pos: Coordinates, slot: CONTAINER_SLOTS, modifier?: string) => void;
        /**
         * @param targets The entity to copy items from.
         * @param slot The slot to copy the items from.
         * @param [modifier] An optional modifier to apply.
         */
        entity: (targets: MultipleEntitiesArgument, slot: ENTITY_SLOTS, modifier?: string) => void;
    };
}
export declare class ModifyItem extends Command {
    /**
     * @param pos The position of the container containing the slot to apply the modifier to.
     * @param slot The slot to apply the modifier to.
     * @param modifier The name of the modifier.
     */
    block: (pos: Coordinates, slot: CONTAINER_SLOTS, modifier: string) => void;
    /**
     * @param targets The entity/entities containing the slot to apply the modifier to.
     * @param slot The slot to apply the modifier to.
     * @param modifier The name of the modifier.
     */
    entity: (targets: MultipleEntitiesArgument, slot: ENTITY_SLOTS, modifier: string) => void;
}
export declare class ReplaceItem extends Command {
    /**
     * @param pos The position of the container containing the slot to be replaced.
     * @param slot The slot to be replaced.
     */
    block: (pos: Coordinates, slot: CONTAINER_SLOTS) => ItemSource;
    /**
     * @param targets one or more entities to modify.
  .
     * @param slot The slot to be replaced.
     */
    entity: (targets: MultipleEntitiesArgument, slot: ENTITY_SLOTS) => ItemSource;
}
/** Replaces or modifies items in inventories */
export declare class Item extends Command {
    /** Applies a modifier to a slot in an inventory. */
    modify: ModifyItem;
    /** Replaces the content of a specific slot of an inventory with another. */
    replace: ReplaceItem;
}
