import { Command } from "../Command";
import type { TimeArgument } from "../../arguments/index";
import type { LiteralUnion } from "../../generalTypes";
/**
 * Changes or queries the world's game time.
 */
export declare class Time extends Command {
    /**
     * Adds `time` to the in-game daytime.
     *
     * @param time the time to add. It can be suffixed with a unit. Units include:
     * - `d`: an in-game day, 24000 gameticks;
     * - `s`: a second, 20 gameticks;
     * - `t` (default and omitable): a single gametick; the default unit.
     */
    add: (time: TimeArgument) => void;
    /**
     * Queries current time.
     *
     * @param type Specifies the time to query. Can be one of the following:
     * - `daytime`: the number of game ticks since dawn. (the in-game daytime modulo 24000)
     * - `gametime`: the age of the world in game ticks. (the game time modulo 2147483647)
     * - `day`: the number of in-game days passed. (the in-game daytime divided by 24000, then modulo 2147483647)
     */
    query: (type: 'daytime' | 'gametime' | 'day') => void;
    /**
     * Sets the in-game daytime.
     *
     * @param time the new daytime. It can be suffixed with a unit. Units include:
     * - `d`: an in-game day, 24000 gameticks;
     * - `s`: a second, 20 gameticks;
     * - `t` (default and omitable): a single gametick; the default unit.
     */
    set: (time: TimeArgument | LiteralUnion<'day' | 'night' | 'noon' | 'midnight'>) => void;
}
