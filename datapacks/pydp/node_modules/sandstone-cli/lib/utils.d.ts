import { InputQuestion, Answers } from 'inquirer';
export declare function getFlagOrPrompt<T extends Answers = Answers>(flags: Record<string, string | undefined | void | boolean>, name: string, inquirerProps: Omit<InputQuestion<T>, 'name'>): Promise<string>;
export declare function hasYarn(): boolean;
/**
 * Get the .minecraft path
 */
export declare function getMinecraftPath(): string;
export declare function getWorldsList(): string[];
/**
 * @param worldName The name of the world
 * @param minecraftPath The optional location of the .minecraft folder.
 * If left unspecified, the .minecraft will be found automatically.
 */
export declare function getWorldPath(worldName: string, minecraftPath?: string | undefined): string;
/**
 * Recursively search for a file.
 * Starts in the current folder, and go to the parent, recursively.
 *
 * @param filename the name of the file to resolve
 * @param from the path to start at
 *
 * @return The path on success, `null` if no the file is found in any parent.
 */
export declare function getFileFolder(filename: string, from?: string): string | null;
export declare type ProjectFolders = {
    absProjectFolder: string;
    rootFolder: string;
    sandstoneConfigFolder: string;
};
export declare function getProjectFolders(projectFolder: string): ProjectFolders;
