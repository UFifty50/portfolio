"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const buildProject_1 = require("../buildProject");
const utils_1 = require("../utils");
const path_1 = __importDefault(require("path"));
const watch_1 = __importDefault(require("./watch"));
class Build extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(Build);
        const folders = utils_1.getProjectFolders(args.path);
        // Register ts-node
        const tsConfigPath = path_1.default.join(folders.rootFolder, 'tsconfig.json');
        require('ts-node').register({
            transpileOnly: !flags.strictErrors,
            project: tsConfigPath,
        });
        buildProject_1.buildProject(flags, folders);
    }
}
exports.default = Build;
Build.description = 'Build the datapack. ‚õè';
Build.examples = [
    '$ sand build',
    '$ sand build --verbose',
    '$ sand build --verbose --dry',
];
Build.flags = watch_1.default.flags;
Build.args = watch_1.default.args;
